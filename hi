@Override
	public void write(Chunk<? extends Organization> organizations) throws Exception {
	    long startTime = System.currentTimeMillis();
	    Date currentDate = new Date();
	    SimpleDateFormat formatter = new SimpleDateFormat(Constants.DATE_FORMAT_dd_MMM_yyyy);
	    String currentTimeStamp = formatter.format(currentDate);
	    List<List<Organization>> chunks = splitIntoChunks(organizations, bundleSize);
	    List<String> qualResourceIds = new ArrayList<>();
	    for (List<Organization> chunk : chunks) {
	        Bundle bundle = createBundle(chunk,qualResourceIds);
	        IParser ip = CustomFhirContext.getInstance().newJsonParser().setPrettyPrint(true);
	        logger.trace(ip.encodeResourceToString(bundle));
	        // Invoke APIs and process DB updates for each chunk
	        invokeAPIsAndProcessDBUpdates(currentDate ,qualResourceIds ,bundle, ip);
			qualResourceIds.clear();
	    }
	}

	private List<List<Organization>> splitIntoChunks(Chunk<? extends Organization> list, int chunkSize) {
	    List<List<Organization>> chunks = new ArrayList<>();
	    for (int i = 0; i < list.size(); i += chunkSize) {
	        chunks.add(new ArrayList<>(list.subList(i, Math.min(i + chunkSize, list.size()))));
	    }
	    return chunks;
	}
